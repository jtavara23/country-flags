{"version":3,"sources":["country.js","wrapper.jsx","country_list.js","reducer.jsx","input.jsx","search.jsx","region.js","action-list.jsx","header.jsx","country_selected.jsx","country_page.jsx","App.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","alpha2Code","history","useHistory","onClick","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","countryListByRegion","length","useEffect","fetch","then","response","json","data","type","payload","catch","console","log","map","country","reducer","action","allList","toLowerCase","filter","c","includes","regionSelected","InputStyled","label","Input","props","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionStyled","select","Region","selectEvent","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","nativeName","subregion","topLevelDomain","currencies","languages","borders","item","CountryPageStyled","CountryPage","match","selectedCountry","find","params","id","setCountry","goBack","store","createStore","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5a3319f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport slugify from 'slugify';\r\n\r\nconst CountryStyled = styled.div`\r\n\ttext-align: left;\r\n\tborder-radius: 5px;\r\n\r\n\t/*\toverflow: hidden;*/\r\n\tbox-shadow: 0 0 7px 2px rgba(0, 0, 0, .03);\r\n\t&:hover .details {\r\n\t\tborder-radius: 0 0 5px 5px;\r\n\t\tborder: 1px solid var(--black);\r\n\t\tborder-top: none;\r\n\t}\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 160px;\r\n\t\tobject-fit: cover;\r\n\t\tvertical-align: top;\r\n\t\tborder-radius: 5px 5px 0 0;\r\n\t}\r\n\t.details {\r\n\t\tpadding: 1.5em;\r\n\t\tborder: 1px solid transparent;\r\n\t\tborder-top: none;\r\n\t\ttransition: .3s border;\r\n\t\tbackground: var(--white);\r\n\t}\r\n\th2 {\r\n\t\tmargin: 0;\r\n\t\tmargin-bottom: 1rem;\r\n\t\tfont-size: 18px;\r\n\t}\r\n\tp {\r\n\t\tfont-size: .9em;\r\n\t\tmargin-bottom: .5rem;\r\n\t}\r\n`;\r\n\r\nfunction Country({\r\n\t//propiedades\r\n\tflag,\r\n\tname,\r\n\tpopulation,\r\n\tregion,\r\n\tcapital,\r\n\talpha2Code\r\n}) {\r\n\tconst history = useHistory();\r\n\r\n\tfunction handleClick() {\r\n\t\thistory.push(`/country/${slugify(alpha2Code)}`);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CountryStyled onClick={handleClick}>\r\n\t\t\t<img loading=\"lazy\" src={flag} alt=\"\" />\r\n\t\t\t<div className=\"details\">\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<strong>Population: </strong>\r\n\t\t\t\t\t{population}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<strong>Region: </strong>\r\n\t\t\t\t\t{region}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<strong>Capital: </strong>\r\n\t\t\t\t\t{capital}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</CountryStyled>\r\n\t);\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperStyled = styled.div`\r\n\tmax-width: 1312px;\r\n\tmargin: auto;\r\n\tpadding: 0 1rem; //1280+ 32\r\n`;\r\n\r\nfunction Wrapper({ children }) {\r\n\treturn <WrapperStyled>{children}</WrapperStyled>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Country from './country';\r\nimport { useSelector, useDispatch } from 'react-redux'; //hook\r\nimport Wrapper from './wrapper';\r\n//grid\r\nconst CountryListStyled = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-row-gap: 2.3em;\r\n\tgrid-auto-flow: columns;\r\n\tgrid-column-gap: 66px;\r\n\tgrid-template-columns: repeat(auto-fill, 270px);\r\n\tbackground: var(--background);\r\n\tjustify-content: center;\r\n\tpadding: 3em 0;\r\n`;\r\n\r\nfunction CountryList() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst countryListByName = useSelector((state) => state.countryListByName);\r\n\r\n\tconst countryList = useSelector((state) => {\r\n\t\tif (state.filterByRegion !== '') {\r\n\t\t\t// filterbyRegion gets changeed on reducer.jsx when got dispatched by actionFilterByRegion\r\n\t\t\treturn state.countryListByRegion;\r\n\t\t}\r\n\t\tif (countryListByName.length > 0) {\r\n\t\t\treturn countryListByName; //return value from search function\r\n\t\t}\r\n\t\treturn state.countryList; //return everything\r\n\t});\r\n\r\n\t//hook\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tfetch('https://restcountries.eu/rest/v2/all')\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: 'SET_COUNTRY_LIST',\r\n\t\t\t\t\t\tpayload: data\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tconsole.log('Error fetching data country');\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[ dispatch ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<CountryListStyled>\r\n\t\t\t\t{countryList.map((country) => {\r\n\t\t\t\t\treturn <Country {...country} />;\r\n\t\t\t\t})}\r\n\t\t\t</CountryListStyled>\r\n\t\t</Wrapper>\r\n\t);\r\n}\r\n\r\nexport default CountryList;\r\n","\r\nfunction reducer( state, action ){\r\n\r\n    switch(action.type){\r\n      case 'SET_COUNTRY_LIST': {\r\n        const allList = action.payload\r\n        return {...state, countryList: allList} //objeto \"...state\" with spread operator\r\n      }\r\n      \r\n      case 'FILTER_BY_NAME': {\r\n        const allList = action.payload.toLowerCase()\r\n        const countryListByName = state.countryList.filter(c => c.name.toLowerCase().includes(allList))\r\n        return {...state,  countryListByName }\r\n      }\r\n  \r\n      case 'FILTER_BY_REGION': {\r\n        const {regionSelected} = action.payload;\r\n  \r\n        if (regionSelected === '') {\r\n          return {...state, countryListByRegion: [], filterByRegion: '',};\r\n        }\r\n  \r\n        const countryListByRegion = state.countryList.filter((country) => country.region === regionSelected);\r\n        return { ...state, countryListByRegion, filterByRegion: regionSelected}\r\n      }\r\n  \r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }\r\n  \r\n  export default reducer;","import React from 'react'\r\nimport styled from 'styled-components'\r\n \r\nconst InputStyled = styled.label`\r\n    display: inline-flex;\r\n    background: var(--white);\r\n    align-items: center;\r\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n    padding: 0 2rem;\r\n    border-radius: 5px;\r\n    flex: 1;\r\n    \r\n    i {\r\n      margin-right: 1em;\r\n      color: #C4C4C4;\r\n    }\r\n    \r\n    input {\r\n      /* width: 100%; */\r\n      flex: 1;\r\n      border: none;\r\n      height: 48px;\r\n      line-height: 48px;\r\n      font-size: .7em;\r\n      outline: 0;\r\n      color: var(--black);\r\n      background: var(--white);\r\n      &::-webkit-input-placeholder {\r\n        color: #C4C4C4;\r\n      }\r\n    }\r\n\r\n`\r\n\r\n\r\nfunction Input({...props}){\r\n  return (\r\n    <InputStyled>\r\n        <i className=\"fas fa-search\"></i>\r\n        <input type=\"text\" {...props} />\r\n    </InputStyled>\r\n  )\r\n}\r\n \r\nexport default Input\r\n ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from './input';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst SearchStyled = styled.div`display: flex;`;\r\n\r\nfunction Search() {\r\n\tconst [ inputValue, setInputValue ] = useState('');\r\n\tconst dispatch = useDispatch();\r\n\r\n\t/* FILTER BY NAME STATES */\r\n\tconst filterByName = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t\tdispatch({\r\n\t\t\ttype: 'FILTER_BY_NAME',\r\n\t\t\tpayload: inputValue\r\n\t\t});\r\n\t};\r\n\tconst clearInput = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'FILTER_BY_NAME',\r\n\t\t\tpayload: ''\r\n\t\t});\r\n\t\tsetInputValue('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SearchStyled>\r\n\t\t\t{inputValue && <button onClick={clearInput}>X</button>}\r\n\t\t\t<Input placeholder=\"Search a Country\" value={inputValue} onChange={filterByName} />\r\n\t\t</SearchStyled>\r\n\t);\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst actionFilterByRegion = (regionSelected) => {\r\n\treturn {\r\n\t\ttype: 'FILTER_BY_REGION',\r\n\t\tpayload: { regionSelected }\r\n\t};\r\n};\r\n\r\nconst RegionStyled = styled.select`\r\n\tpadding: 1.3em;\r\n\tborder: none;\r\n\tborder-radius: 5px;\r\n\toutline: 0;\r\n\tbox-shadow: 0 2px 9px 0 rgba(0, 0, 0, .05);\r\n\tbackground: var(--white);\r\n\tcolor: var(--black);\r\n`;\r\n\r\nexport const Region = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n\t/**\r\n     * Disptach filterByRegion action\r\n     * \r\n     * @param {React.SyntheticEvent} selectEvent\r\n     */\r\n\tconst onRegionChange = (selectEvent) => {\r\n\t\tconst value = selectEvent.target.value;\r\n\r\n\t\tdispatch(actionFilterByRegion(value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<RegionStyled onChange={onRegionChange} value={filterByRegion}>\r\n\t\t\t<option value=\"\">Filter by region</option>\r\n\t\t\t<option value=\"Africa\">Africa</option>\r\n\t\t\t<option value=\"Americas\">Americas</option>\r\n\t\t\t<option value=\"Asia\">Asia</option>\r\n\t\t\t<option value=\"Europe\">Europe</option>\r\n\t\t\t<option value=\"Oceania\">Oceania</option>\r\n\t\t</RegionStyled>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Search from './search';\r\nimport { Region as FilterByRegion } from './region';\r\nimport Wrapper from './wrapper';\r\n\r\nconst ActionListStyled = styled.div`\r\n\t.grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr;\r\n\t\tgrid-row-gap: 20px;\r\n\t}\r\n\t@media screen and (min-width: 768px) {\r\n\t\t.grid {\r\n\t\t\tgrid-template-columns: 480px 1fr 164px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction ActionList() {\r\n\treturn (\r\n\t\t<ActionListStyled>\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<div className=\"grid\">\r\n\t\t\t\t\t<Search />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<FilterByRegion />\r\n\t\t\t\t</div>\r\n\t\t\t</Wrapper>\r\n\t\t</ActionListStyled>\r\n\t);\r\n}\r\n\r\nexport default ActionList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Wrapper from './wrapper';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderStyled = styled.div`\r\n\tbackground: var(--white);\r\n\tmargin-bottom: 1em;\r\n\tbox-shadow: 0 2px 4px 0 rgba(0, 0, 0, .06);\r\n\t.content {\r\n\t\theight: 80px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\th1 {\r\n\t\tfont-size: 14px;\r\n\t}\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: var(--dark);\r\n\t}\r\n\t.dark-mode {\r\n\t\tcursor: pointer; //clickable\r\n\r\n\t\t.moon {\r\n\t\t\ttransform: rotate(-25deg);\r\n\t\t\tdisplay: inline-flex;\r\n\t\t\tmargin-right: 10px;\r\n\t\t}\r\n\t\tp {\r\n\t\t\tfont-size: 12px;\r\n\t\t\tfont-weight: 600;\r\n\t\t}\r\n\t}\r\n\t@media screen and (min-width: 768px) {\r\n\t\tmargin-bottom: 3em;\r\n\t\th1 {\r\n\t\t\tfont-size: 24px;\r\n\t\t}\r\n\t\tp {\r\n\t\t\tfont-size: 1rem;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction Header({ setDarkMode, darkMode }) {\r\n\tfunction handleClick() {\r\n\t\tsetDarkMode(!darkMode);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<HeaderStyled>\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t<h1>Where in the world?</h1>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t<div className=\"dark-mode\">\r\n\t\t\t\t\t\t<p onClick={handleClick}>\r\n\t\t\t\t\t\t\t<span className=\"moon\">\r\n\t\t\t\t\t\t\t\t{darkMode ? <i className=\"fas fa-moon\" /> : <i className=\"far fa-moon\" />}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\tDark Mode\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Wrapper>\r\n\t\t</HeaderStyled>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n\tmargin-top: 3em;\r\n\tpadding-bottom: 3em;\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\tmargin-bottom: 2em;\r\n\t}\r\n\t.grid {\r\n\t\tdisplay: grid;\r\n\t\tgrid-row-gap: 1em;\r\n\t}\r\n\t.border-item {\r\n\t\tpadding: .5em 2em;\r\n\t\tborder-radius: 5px;\r\n\t\tmargin-right: 15px;\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, .3);\r\n\t\tdisplay: inline-flex;\r\n\t\tmargin-bottom: 15px;\r\n\t\tbackground: var(--white);\r\n\t}\r\n\t.languages {\r\n\t\tspan {\r\n\t\t\tmargin-right: 5px;\r\n\t\t\t&:after {\r\n\t\t\t\tcontent: ',';\r\n\t\t\t}\r\n\t\t\t&:last-child {\r\n\t\t\t\t&:after {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t@media screen and (min-width: 1024px) {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-column-gap: 120px;\r\n\t\tmargin-top: 5em;\r\n\t\t.grid {\r\n\t\t\tgrid-template-columns: 1fr 1fr;\r\n\t\t}\r\n\t\t.borders {\r\n\t\t\tdisplay: inline-flex;\r\n\t\t\tmargin-right: 1em;\r\n\t\t\tmargin-top: 3.5em;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction CountrySelected({\r\n\tflag,\r\n\tname,\r\n\tnativeName,\r\n\tpopulation,\r\n\tregion,\r\n\tsubregion,\r\n\tcapital,\r\n\ttopLevelDomain,\r\n\tcurrencies = [],\r\n\tlanguages = [],\r\n\tborders = []\r\n}) {\r\n\treturn (\r\n\t\t<CountrySelectedStyled>\r\n\t\t\t<img src={flag} alt=\"\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<div className=\"grid\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Native Name:</strong> {nativeName}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Population:</strong> {population}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Region:</strong> {region}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Sub Region:</strong> {subregion}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Capital:</strong> {capital}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Top Level Domain:</strong> {topLevelDomain}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p className=\"languages\">\r\n\t\t\t\t\t\t\t<strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"borders\">\r\n\t\t\t\t\t<strong>Border Countries:</strong>\r\n\t\t\t\t</p>\r\n\t\t\t\t{borders.map((item) => <span className=\"border-item\">{item}</span>)}\r\n\t\t\t</div>\r\n\t\t</CountrySelectedStyled>\r\n\t);\r\n}\r\n\r\nexport default CountrySelected;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Wrapper from './wrapper';\r\nimport { useSelector } from 'react-redux';\r\nimport CountrySelected from './country_selected';\r\nconst CountryPageStyled = styled.div`\r\n\t.back {\r\n\t\tbackground: var(--white);\r\n\t\tbox-shadow: 0 0 5px rgba(0, 0, 0, .3);\r\n\t\tpadding: .7em 2.2em;\r\n\t\tborder-radius: 5px;\r\n\t\tborder: none;\r\n\t\tcursor: pointer;\r\n\t\tmargin-top: 1em;\r\n\t\tcolor: var(--black);\r\n\t\ti {\r\n\t\t\tmargin-right: 5px;\r\n\t\t}\r\n\t}\r\n\t@media screen and (min-width: 1024px) {\r\n\t\t.back {\r\n\t\t\tmargin-top: 3em;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction CountryPage({ match, history }) {\r\n\tconst selectedCountry = useSelector((state) =>\r\n\t\tstate.countryList.find((item) => item.alpha2Code === match.params.id)\r\n\t);\r\n\t//hook\r\n\tconst [ country, setCountry ] = useState(selectedCountry);\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (!country) {\r\n\t\t\t\tfetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\tsetCountry(data);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\tconsole.log('Error fetching data for selected country');\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ country, match.params.id ]\r\n\t);\r\n\r\n\tfunction handleClick() {\r\n\t\thistory.goBack();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CountryPageStyled>\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<button className=\"back\" onClick={handleClick}>\r\n\t\t\t\t\t<i className=\"fas fa-long-arrow-alt-left\" /> Back\r\n\t\t\t\t</button>\r\n\t\t\t\t<CountrySelected {...country} />\r\n\t\t\t</Wrapper>{' '}\r\n\t\t</CountryPageStyled>\r\n\t);\r\n}\r\n\r\nexport default CountryPage;\r\n","import React, { useState, useEffect } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport CountryList from './country_list';\nimport reducer from './reducer';\nimport ActionList from './action-list';\nimport Header from './header';\nimport CountryPage from './country_page';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst initialState = {\n\tcountryList: [],\n\tcountryListByName: [],\n\tcountryListByRegion: [],\n\tfilterByRegion: ''\n};\n\nconst store = createStore(reducer, initialState); // 3 params by default: reducer, initialState, enhacer\n\nfunction App() {\n\tconst [ darkMode, setDarkMode ] = useState(false);\n\tconst [ checked, setChecked ] = useState(false);\n\tconst mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode';\n\n\tfunction changeMedia(mq) {\n\t\tsetDarkMode(mq.matches);\n\t\tsetChecked(mq.matches);\n\t}\n\n\tuseEffect(() => {\n\t\tconst mq = window.matchMedia('(prefers-color-scheme: dark)');\n\t\tmq.addListener(changeMedia);\n\t\tsetDarkMode(mq.matches);\n\t\tsetChecked(mq.matches);\n\t\treturn () => {\n\t\t\tmq.removeListener(changeMedia);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<main className={mainClass}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Header setDarkMode={setDarkMode} darkMode={darkMode} />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/country/:id\" component={CountryPage} />\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<ActionList />\n\t\t\t\t\t\t\t<CountryList />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}